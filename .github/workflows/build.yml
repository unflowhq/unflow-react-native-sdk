name: Build + Lint

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_lint:
    name: Build + Lint
    runs-on: macos-12
    env: 
      BUNDLE_GEMFILE: example/ios/Gemfile
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --cwd example --frozen-lockfile
          yarn install --cwd samples/ExpoModules --frozen-lockfile
          yarn install --cwd samples/ThirdPartySDKs --frozen-lockfile
          yarn install --frozen-lockfile

      - name: Lint files
        run: yarn lint

      - name: Typecheck files
        run: yarn typescript

      - name: Build package
        run: yarn prepare

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Restore pods ( if available )
        uses: actions/cache@v2
        with:
          path: |
            example/ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('example/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        working-directory: example/ios
        run: pod install --repo-update

      - name: Build app
        working-directory: example/ios
        run: bundle exec fastlane build_example_app

